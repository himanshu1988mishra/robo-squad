{"version":3,"sources":["Components/reducers.js","Components/Card/card.js","Components/Cardlist/cardlist.js","Components/Searchbox/searchbox.js","Components/Scroll/scroll.js","Components/ErrorBoundary/errorboundary.js","Components/App/app.js","Components/action.js","Components/constants.js","index.js"],"names":["initialStateSearch","searchField","initialStateRequest","isPending","robots","error","Card","name","email","className","src","alt","Cardlist","map","robot","key","id","Searchbox","searchChange","type","onChange","placeholder","Scroll","props","style","overflowY","borderTop","height","children","ErrorBoundary","state","hasError","console","log","this","color","Component","App","onRequestRobots","onSearchChange","filteredRobots","filter","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ced41be6.chunk.js","sourcesContent":["import { \r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED\r\n} from './constants'\r\n\r\nconst initialStateSearch = {\r\n  searchField: ''\r\n}\r\n\r\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\r\n  switch(action.type) {\r\n    case CHANGE_SEARCH_FIELD: \r\n      return Object.assign({}, state, {searchField: action.payload})\r\n   \r\n    default: \r\n      return state\r\n  }\r\n}\r\n\r\nconst initialStateRequest = {\r\n  isPending: false,\r\n  robots: [],\r\n  error: ''\r\n}\r\n\r\nexport const requestRobots = (state = initialStateRequest, action = {}) => {\r\n  switch(action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return Object.assign({}, state, {isPending: true})\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      return Object.assign({}, state, {robots: action.payload, isPending: false})\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return Object.assign({}, state, {error: action.payload, isPending: false})\r\n    default:\r\n      return state\r\n  }\r\n}","import React from 'react'\r\n\r\nconst Card = ({name, email}) => {\r\n  return (\r\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc\">\r\n      <img src={`https://robohash.org/${name}?size=200x200`} alt=\"Robot\" />\r\n      <div>\r\n        <h2 className=\"f5\">{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/card';\r\n\r\nconst Cardlist = ({robots}) => {\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"w-90 flex flex-wrap justify-center center\">\r\n        {\r\n          robots.map(robot => {\r\n            return (\r\n              <Card \r\n                key={robot.id} \r\n                name={robot.name} \r\n                email={robot.email} \r\n              />\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cardlist;","import React from 'react'\r\n\r\nconst Searchbox = ({searchChange}) => {\r\n  return (\r\n    <form className=\"mb3\">\r\n      <input \r\n        className=\"pa3 ba b--green bg-lightest-blue\" \r\n        type='text' \r\n        onChange={searchChange}\r\n        placeholder=\"search robots\" \r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Searchbox;","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div \r\n      style={\r\n        {\r\n          overflowY: 'scroll', \r\n          borderTop: '1px solid rgb(15 66 49)', \r\n          height: '80vh'\r\n        }\r\n      }\r\n    >\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return {hasError: true}\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    console.log(error)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.hasError ? \r\n      <h1 className=\"f2 tc\" style={{color: '#f5f5f5'}}>\r\n        <span style={{color: 'red'}}>Sorry</span> for the inconvenience...\r\n      </h1> :\r\n      (\r\n        this.props.children\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../Cardlist/cardlist';\r\nimport SearchBox from '../Searchbox/searchbox';\r\nimport Scroll from '../Scroll/scroll';\r\nimport ErrorBoundary from '../ErrorBoundary/errorboundary';\r\nimport { setSearchField, requestRobots } from '../action';\r\n\r\nconst mapStateToProps = state => ({\r\n  searchField: state.searchRobots.searchField,\r\n  robots: state.requestRobots.robots,\r\n  isPending: state.requestRobots.isPending,\r\n  error: state.requestRobots.error\r\n})\r\n\r\nconst MapDispatchToProps = dispatch => ({\r\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots())\r\n})\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onRequestRobots()\r\n  }\r\n\r\n  render() {\r\n    const { searchField, onSearchChange, robots, isPending } = this.props;\r\n\r\n    const filteredRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    })\r\n    return isPending ?\r\n      <h1>Loading</h1> :\r\n      (\r\n        <div className='tc'>\r\n          <h1 className='f1'>Robo Squad</h1>\r\n          <SearchBox searchChange={onSearchChange}/>\r\n          <Scroll>\r\n            <ErrorBoundary>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundary>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, MapDispatchToProps)(App);","import { \r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED\r\n} from './constants'\r\n\r\nexport const setSearchField = text => ({\r\n  type: CHANGE_SEARCH_FIELD,\r\n  payload: text\r\n})\r\n\r\nexport const requestRobots = () => dispatch => {\r\n  dispatch({type: REQUEST_ROBOTS_PENDING})\r\n\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response=> response.json())\r\n    .then(data => dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: data}))\r\n    .catch(error => dispatch({type: REQUEST_ROBOTS_FAILED, payload: error}))\r\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING'\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS'\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { searchRobots, requestRobots } from './Components/reducers';\r\nimport { createLogger } from 'redux-logger';\r\nimport App from '../src/Components/App/app';\r\nimport './index.css';\r\nimport 'tachyons';\r\n\r\nconst logger = createLogger()\r\n\r\nconst rootReducer = combineReducers({searchRobots, requestRobots})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}